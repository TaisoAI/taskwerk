name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.2.3)'
        required: true

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Run tests
        run: npm test
        env:
          CI: true
      
      - name: Determine version
        id: version
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT
      
      - name: Update package version
        run: npm version ${{ steps.version.outputs.version }} --no-git-tag-version
      
      - name: Generate changelog
        id: changelog
        run: |
          # Get commits since last tag
          LAST_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            COMMITS=$(git log $LAST_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi
          
          # Create changelog
          cat > RELEASE_NOTES.md << EOF
          ## What's Changed
          
          $COMMITS
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/$LAST_TAG...${{ steps.version.outputs.tag }}
          EOF
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat RELEASE_NOTES.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: TaskWerk ${{ steps.version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false
          files: |
            dist/taskwerk.js
            dist/taskwerk.min.js
      
      - name: Publish to NPM
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Create release announcement
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const version = '${{ steps.version.outputs.version }}';
            const tag = '${{ steps.version.outputs.tag }}';
            
            // Create discussion if discussions are enabled
            try {
              await github.rest.discussions.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `TaskWerk ${version} Released! ðŸŽ‰`,
                body: `A new version of TaskWerk has been released!\n\n` +
                      `## Installation\n\n` +
                      `\`\`\`bash\nnpm install -g taskwerk@${version}\n\`\`\`\n\n` +
                      `## Changelog\n\n` +
                      `${{ steps.changelog.outputs.changelog }}\n\n` +
                      `## Links\n\n` +
                      `- [Release Notes](https://github.com/${{ github.repository }}/releases/tag/${tag})\n` +
                      `- [NPM Package](https://www.npmjs.com/package/taskwerk/v/${version})`,
                category_id: 'announcements'
              });
            } catch (error) {
              console.log('Could not create discussion:', error.message);
            }