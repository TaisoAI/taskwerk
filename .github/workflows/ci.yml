name: CI

on:
  push:
    branches: [main, 'feature/**', 'hotfix/**']
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          CI: true
      
      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Verify dist files
        run: |
          if [ ! -f dist/taskwerk.js ]; then
            echo "Error: dist/taskwerk.js not found"
            exit 1
          fi
          echo "Build artifacts verified successfully"
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: dist/
          retention-days: 7

  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build project
        run: npm run build
      
      - name: Create .npmrc
        run: |
          if [ -z "${{ secrets.NPM_TOKEN }}" ]; then
            echo "ERROR: NPM_TOKEN secret is empty!"
            exit 1
          fi
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "npmrc file created successfully"
          # Check if the token starts with npm_ (without revealing it)
          if [[ "${{ secrets.NPM_TOKEN }}" == npm_* ]]; then
            echo "Token format looks correct (starts with npm_)"
          else
            echo "WARNING: Token doesn't start with npm_"
          fi
      
      - name: Check npm authentication
        run: |
          npm whoami --registry https://registry.npmjs.org/ || (echo "Failed to authenticate"; cat ~/.npm/_logs/*.log 2>/dev/null || true; exit 1)
          npm view taskwerk --registry https://registry.npmjs.org/
      
      - name: Publish to npm
        run: npm publish --registry https://registry.npmjs.org/ || (echo "Publish failed"; cat ~/.npm/_logs/*.log 2>/dev/null || true; exit 1)